# AssetFlow Nginx Reverse Proxy Configuration
# Place this file in: /etc/nginx/sites-available/assetflow
# Enable with: sudo ln -s /etc/nginx/sites-available/assetflow /etc/nginx/sites-enabled/

# Upstream definitions
upstream assetflow_frontend {
    server localhost:3000;
}

upstream assetflow_backend {
    server localhost:5000;
}

# HTTP Server - Redirect to HTTPS (for future SSL)
server {
    listen 80;
    server_name 167.235.58.24;

    # For now, serve directly on HTTP
    # Later: return 301 https://$server_name$request_uri;

    # Frontend
    location / {
        proxy_pass http://assetflow_frontend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }

    # Backend API
    location /api {
        proxy_pass http://assetflow_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;

        # CORS headers (if needed)
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type' always;
    }

    # Health check endpoint
    location /health {
        proxy_pass http://assetflow_backend/health;
        access_log off;
    }

    # WebSocket support (for future hot reload in dev)
    location /ws {
        proxy_pass http://assetflow_frontend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
    }
}

# HTTPS Server (for future SSL configuration)
# server {
#     listen 443 ssl http2;
#     server_name 167.235.58.24;
#
#     ssl_certificate /etc/letsencrypt/live/167.235.58.24/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/167.235.58.24/privkey.pem;
#
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers HIGH:!aNULL:!MD5;
#     ssl_prefer_server_ciphers on;
#
#     # Same location blocks as HTTP server above
# }
